{% if cuda_compiler_version in (None, "None", True, False) %}
{% set cuda_major = 0 %}
{% else %}
{% set cuda_major = environ.get("cuda_compiler_version", "11.8").split(".")[0]|int %}
{% endif %}

{% if cross_target_platform is undefined %}
{% set cross_target_platform = target_platform %}
{% endif %}

package:
  name: nvcc
  version: {{ cuda_compiler_version }}

build:
  number: 25
  skip: {{ not (compiler("cuda").startswith("nvcc") and cuda_compiler_version == "11.8") }}

outputs:
  - name: nvcc_{{ cross_target_platform }}
    script: linux/install_nvcc.sh     # [linux]
    script: windows/install_nvcc.bat  # [win]
    build:
      ignore_run_exports_from:
        - {{ c_compiler }}_{{ cross_target_platform }}
      run_exports:
        strong:
          - cudatoolkit >={{ cuda_compiler_version }},<{{ cuda_major + 1 }}
          - sysroot_{{ cross_target_platform }} >={{ c_stdlib_version }}    # [linux]
    requirements:
      build:      # [win]
        - m2-sed  # [win]
      host:
        - {{ stdlib("c") }}
        # Needed to symlink libcuda into sysroot libs.
        - {{ c_compiler }}_{{ cross_target_platform }} {{ c_compiler_version }}.*       # [linux]
        - {{ c_compiler }}_{{ cross_target_platform }}                                  # [win]
        - sysroot_{{ cross_target_platform }} >={{ c_stdlib_version }}  # [linux]
      run:
        - cudatoolkit >={{ cuda_compiler_version }},<{{ cuda_major + 1 }}
        - sed                                                           # [linux]
        - sysroot_{{ cross_target_platform }} >={{ c_stdlib_version }}  # [linux]
    test:
      requires:
        - {{ c_compiler }}_{{ cross_target_platform }} {{ c_compiler_version }}.*       # [linux]
        - {{ c_compiler }}_{{ cross_target_platform }}                                  # [win]
        # Host code is forwarded to a C++ compiler
        - {{ cxx_compiler }}_{{ cross_target_platform }} {{ cxx_compiler_version }}.*   # [linux]
        - {{ cxx_compiler }}_{{ cross_target_platform }}                                # [win]
      files:
        - test.cu
        - linux/test_nvcc.sh     # [linux]
        - windows\test_nvcc.bat  # [win]
      commands:
        - bash linux/test_nvcc.sh  # [linux and target_platform == cross_target_platform]
        - windows\test_nvcc.bat    # [win and target_platform == cross_target_platform]
    about:
      home: https://github.com/conda-forge/nvcc-feedstock
      license: BSD-3-Clause
      license_file: LICENSE.txt
      summary: A meta-package to enable the right nvcc.

about:
  home: https://github.com/conda-forge/nvcc-feedstock
  license: BSD-3-Clause
  license_file: LICENSE.txt
  summary: A meta-package to enable the right nvcc.

extra:
  recipe-maintainers:
    - conda-forge/cuda
    - dillon-cullinan
    - isuruf
    - jakirkham
    - kkraus14
    - mike-wendt
    - raydouglass
    - jaimergp
    - leofang
